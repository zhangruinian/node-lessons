{"version":3,"sources":["webpack:///static/js/1.6d79d5c56f787a5a4db2.js","webpack:///./src/views/search/out-in-statistics-a.vue","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/config.js?2f63","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/helper/image.js?8535","webpack:///./src/utils/convertDate.js?6d48","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/helper/text.js?069c","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./src/assets/imgs/gate-nav-s.jpg","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/component/title.js?e263","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/coord/geo/Region.js?fc66","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js?edf7","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/export.js?1f28","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/polygon.js?1f9f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///out-in-statistics-a.vue","webpack:///./src/views/search/out-in-statistics-a.vue?f374","webpack:///./src/views/search/out-in-statistics-a.vue?0a88","webpack:///./src/views/search/out-in-statistics-a.vue?b53f"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","$override","name","fn","methods","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","document","createElement","get","prefixedKey","removeKey","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","Image","style","image","x","y","width","height","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","Math","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","opt","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","zrUtil","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","min","mergePath","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","parseDate","NaN","createDataFormatModel","model","Model","dataFormatMixin","seriesIndex","mainType","subType","getData","mappingToExists","exists","newCptOptions","index","exist","cptOption","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","parseFinder","finder","defaultMainType","has","parsedKey","match","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","dataDimToCoordDim","dataDim","dimensions","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","getItemVisual","componentType","componentSubType","seriesType","seriesName","marker","getTooltipMarker","$vars","status","labelProp","itemModel","getItemModel","params","formatter","formatTpl","idx","formatTooltip","makeGetter","hostObj","create","out","ArrayCtor","copy","v","a","b","add","v1","v2","scaleAndAdd","sub","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","log","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","Date","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","list","littleThan","lg","interval","close","curr","Infinity","currClose","splice","isNumeric","MAX_SAFE_INTEGER","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","updateDirectly","ecIns","callView","view","__alive","__model","query","eachComponent","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","__ecComponentInfo","componentIndex","remove","dispose","processData","process","stackSeriesData","stackedDataMap","series","stack","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","blendMode","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","left","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","visualType","getViewOfComponentModel","getViewOfSeriesModel","restoreData","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","eventData","_disposed","clear","disconnect","dataTool","version","___ec_export","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","_default","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","global","dev","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","cos","sin","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","excludes","includes","propName","setting","_setting","_extent","_interval","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","_clazz","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","convertDate","DateObj","dateString","toLocaleDateString","defineProperty","default","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","encodeDef","dimsDef","completeDimensions","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","hasItemOption","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","updateTransform","decomposeTransform","_symbol","createSymbol","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","getLabelInterval","fixExtentWithBands","nTick","size","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","_layout","Cartesian2D","Axis2D","gridProto","_updateScale","xAxis","yAxis","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getBaseAxis","getOtherAxis","grids","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","getSum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","_format","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","colorIdx","colorNameMap","colorPalette","fixExtent","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","guid","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","PI2","windingLine","dir","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","idStart","ZImage","_image","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","chartInstance","echartsAPIList","barLayoutGrid","eachSeriesByType","BaseBarSeries","brushSelector","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","_helper","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","oldData","_data","elementCreator","newIndex","oldIndex","execute","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","itemStyle","makeStyleMapper","getBorderLineDash","hoverLabelModel","fixPosition","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","globalListener","AxisPointerView","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","getItemStyle","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","getGlobalExtent","pixelValue","elStyle","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","prevX","prevY","areaInterval","areaStyle","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","tooltipModel","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","symbolSize","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","categoryAxis","valueAxis","timeAxis","logAxis","logBase","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","getAxesByScale","_dataCoordConvert","input","dimList","output","axisX","axisY","containLabel","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","polygon","featureObj","region","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","coordDims","sign","lastCoord","lastCoordOrigin","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","graphicUtil","PATH_COLOR","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","componentProto","encodeColor","colorAccessPath","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","viewportRoot","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","_curve","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","textHelper","orignalBrush","modified","shadowTemp","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","polyHelper","fixClipWithShadow","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","nPoint","mathAtan2","_interopRequireDefault","__esModule","_echarts","_echarts2","_index","_index2","_convertDate","_convertDate2","localStorage","counts","timeList","numList","chnl_no","dateRange","chartDate","pickerOptions","disabledDate","now","shortcuts","onClick","picker","setTime","$emit","computed","startTime","endTime","getCount","_this","starttime","endtime","gate_id","then","time_list","num_list","updateChart","handleClick","watch","created","mounted","getElementById","beforeDestroy","sources","mappings","file","sourcesContent","sourceRoot","locals","_vm","$createElement","_c","_self","staticClass","attrs","alt","_v","$event","_s","clearable","editable","change","$$v","expression","_m","staticRenderFns"],"mappings":"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","file":"static/js/1.6d79d5c56f787a5a4db2.js","sourcesContent":["webpackJsonp([1],Array(531).concat([\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(733)\n\nvar Component = __webpack_require__(58)(\n  /* script */\n  __webpack_require__(708),\n  /* template */\n  __webpack_require__(744),\n  /* scopeId */\n  \"data-v-572af2f4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar pathTool = __webpack_require__(701);\n\nvar colorTool = __webpack_require__(558);\n\nvar matrix = __webpack_require__(555);\n\nvar vector = __webpack_require__(540);\n\nvar Path = __webpack_require__(544);\n\nvar Transformable = __webpack_require__(606);\n\nvar Image = __webpack_require__(600);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(563);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(685);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(692);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(698);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(697);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(694);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(695);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(696);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(693);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(691);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(690);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(682);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(683);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(684);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(545);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar formatUtil = __webpack_require__(548);\n\nvar nubmerUtil = __webpack_require__(541);\n\nvar Model = __webpack_require__(547);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(607);\n\nvar zrUtil = __webpack_require__(537);\n\nvar colorTool = __webpack_require__(558);\n\nvar env = __webpack_require__(543);\n\nvar timsort = __webpack_require__(569);\n\nvar Eventful = __webpack_require__(557);\n\nvar GlobalModel = __webpack_require__(650);\n\nvar ExtensionAPI = __webpack_require__(616);\n\nvar CoordinateSystemManager = __webpack_require__(565);\n\nvar OptionManager = __webpack_require__(651);\n\nvar backwardCompat = __webpack_require__(658);\n\nvar ComponentModel = __webpack_require__(550);\n\nvar SeriesModel = __webpack_require__(587);\n\nvar ComponentView = __webpack_require__(664);\n\nvar ChartView = __webpack_require__(663);\n\nvar graphic = __webpack_require__(538);\n\nvar modelUtil = __webpack_require__(539);\n\nvar _throttle = __webpack_require__(568);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(665);\n\nvar loadingDefault = __webpack_require__(649);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(646);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(570);\n\nvar zrUtil = __webpack_require__(537);\n\nvar PathProxy = __webpack_require__(564);\n\nvar pathContain = __webpack_require__(677);\n\nvar Pattern = __webpack_require__(601);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(540);\n\nvar matrix = __webpack_require__(555);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)))\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar env = __webpack_require__(543);\n\nvar clazzUtil = __webpack_require__(549);\n\nvar lineStyleMixin = __webpack_require__(656);\n\nvar areaStyleMixin = __webpack_require__(653);\n\nvar textStyleMixin = __webpack_require__(657);\n\nvar itemStyleMixin = __webpack_require__(655);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar textContain = __webpack_require__(553);\n\nvar numberUtil = __webpack_require__(541);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Model = __webpack_require__(547);\n\nvar componentUtil = __webpack_require__(567);\n\nvar clazzUtil = __webpack_require__(549);\n\nvar layout = __webpack_require__(552);\n\nvar boxLayoutMixin = __webpack_require__(654);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 551 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar textContain = __webpack_require__(553);\n\nvar OrdinalScale = __webpack_require__(661);\n\nvar IntervalScale = __webpack_require__(566);\n\nvar Scale = __webpack_require__(561);\n\nvar numberUtil = __webpack_require__(541);\n\n__webpack_require__(662);\n\n__webpack_require__(660);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n/* 552 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar BoundingRect = __webpack_require__(545);\n\nvar _number = __webpack_require__(541);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(548);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n/* 553 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(545);\n\nvar imageHelper = __webpack_require__(572);\n\nvar _util = __webpack_require__(537);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(540);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(557);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(543);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 557 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(596);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 559 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Model = __webpack_require__(547);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 560 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(549);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n/* 562 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 563 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Element = __webpack_require__(591);\n\nvar BoundingRect = __webpack_require__(545);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 564 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(554);\n\nvar vec2 = __webpack_require__(540);\n\nvar bbox = __webpack_require__(597);\n\nvar BoundingRect = __webpack_require__(545);\n\nvar _config = __webpack_require__(562);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 565 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(541);\n\nvar formatUtil = __webpack_require__(548);\n\nvar Scale = __webpack_require__(561);\n\nvar helper = __webpack_require__(589);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar _clazz = __webpack_require__(549);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n/* 568 */\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n/* 569 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Style = __webpack_require__(602);\n\nvar Element = __webpack_require__(591);\n\nvar RectText = __webpack_require__(689);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(596);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = convertDate;\nfunction convertDate(DateObj) {\n    var dateString = DateObj.toLocaleDateString();\n\n    if (dateString.indexOf('年') > -1) {\n        dateString = dateString.replace('年', '-');\n        dateString = dateString.replace('月', '-');\n        dateString = dateString.replace('日', '');\n        return dateString;\n    } else if (dateString.split('/')[2] && dateString.split('/')[2].length === 4) {\n            return [dateString.split('/')[2], dateString.split('/')[0], dateString.split('/')[1]].join(\"-\");\n        } else if (dateString.split('-')[0] && dateString.split('-')[0].length === 4) {\n                return dateString;\n            } else {\n                    return dateString.split('/').join(\"-\");\n                }\n}\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar List = __webpack_require__(585);\n\nvar completeDimensions = __webpack_require__(586);\n\nvar _model = __webpack_require__(539);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(565);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar modelUtil = __webpack_require__(539);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar env = __webpack_require__(543);\n\nvar modelUtil = __webpack_require__(539);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\nvar textContain = __webpack_require__(553);\n\nvar formatUtil = __webpack_require__(548);\n\nvar matrix = __webpack_require__(555);\n\nvar axisHelper = __webpack_require__(551);\n\nvar AxisBuilder = __webpack_require__(578);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(537);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(548);\n\nvar graphic = __webpack_require__(538);\n\nvar Model = __webpack_require__(547);\n\nvar _number = __webpack_require__(541);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(590);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(555);\n\nvar _vector = __webpack_require__(540);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(542);\n\nvar axisPointerModelHelper = __webpack_require__(559);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar numberUtil = __webpack_require__(541);\n\nvar axisHelper = __webpack_require__(551);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar axisHelper = __webpack_require__(551);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar ComponentModel = __webpack_require__(550);\n\nvar axisModelCreator = __webpack_require__(638);\n\nvar axisModelCommonMixin = __webpack_require__(582);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar BoundingRect = __webpack_require__(545);\n\nvar _layout = __webpack_require__(552);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(551);\n\nvar Cartesian2D = __webpack_require__(641);\n\nvar Axis2D = __webpack_require__(639);\n\nvar CoordinateSystem = __webpack_require__(565);\n\n__webpack_require__(642);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar Model = __webpack_require__(547);\n\nvar DataDiffer = __webpack_require__(645);\n\nvar modelUtil = __webpack_require__(539);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)))\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar _model = __webpack_require__(539);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar env = __webpack_require__(543);\n\nvar _format = __webpack_require__(548);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(549);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(539);\n\nvar ComponentModel = __webpack_require__(550);\n\nvar colorPaletteMixin = __webpack_require__(588);\n\nvar _layout = __webpack_require__(552);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(549);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(541);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\nvar BoundingRect = __webpack_require__(545);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(598);\n\nvar Eventful = __webpack_require__(557);\n\nvar Transformable = __webpack_require__(606);\n\nvar Animatable = __webpack_require__(699);\n\nvar zrUtil = __webpack_require__(537);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(672);\n\nvar color = __webpack_require__(558);\n\nvar _util = __webpack_require__(537);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(540);\n\nvar curve = __webpack_require__(554);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 599 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(562);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 600 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(570);\n\nvar BoundingRect = __webpack_require__(545);\n\nvar zrUtil = __webpack_require__(537);\n\nvar imageHelper = __webpack_require__(572);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 601 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 602 */\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(688);\n\nvar smoothBezier = __webpack_require__(687);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 604 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(537);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(553);\n\nvar roundRectHelper = __webpack_require__(604);\n\nvar imageHelper = __webpack_require__(572);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 606 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(555);\n\nvar vector = __webpack_require__(540);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(598);\n\nvar env = __webpack_require__(543);\n\nvar zrUtil = __webpack_require__(537);\n\nvar Handler = __webpack_require__(667);\n\nvar Storage = __webpack_require__(670);\n\nvar Painter = __webpack_require__(669);\n\nvar Animation = __webpack_require__(671);\n\nvar HandlerProxy = __webpack_require__(681);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 608 */,\n/* 609 */,\n/* 610 */,\n/* 611 */,\n/* 612 */,\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/img/gate-nav-s.30bf3f3.jpg\";\n\n/***/ }),\n/* 614 */,\n/* 615 */,\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar zrUtil = __webpack_require__(537);\n\nvar barLayoutGrid = __webpack_require__(648);\n\n__webpack_require__(584);\n\n__webpack_require__(618);\n\n__webpack_require__(619);\n\n__webpack_require__(631);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(620);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 619 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(542);\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\nvar _helper = __webpack_require__(622);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(547);\n\nvar barItemStyle = __webpack_require__(621);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 620 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(587);\n\nvar createListFromArray = __webpack_require__(574);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 621 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(560);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 622 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(538);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n/* 623 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(583);\n\n__webpack_require__(630);\n\n/***/ }),\n/* 624 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar zrUtil = __webpack_require__(537);\n\nvar axisPointerModelHelper = __webpack_require__(559);\n\nvar axisTrigger = __webpack_require__(629);\n\n__webpack_require__(625);\n\n__webpack_require__(626);\n\n__webpack_require__(628);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar globalListener = __webpack_require__(576);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar clazzUtil = __webpack_require__(549);\n\nvar graphic = __webpack_require__(538);\n\nvar axisPointerModelHelper = __webpack_require__(559);\n\nvar eventTool = __webpack_require__(556);\n\nvar throttleUtil = __webpack_require__(568);\n\nvar modelUtil = __webpack_require__(539);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 628 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(538);\n\nvar BaseAxisPointer = __webpack_require__(627);\n\nvar viewHelper = __webpack_require__(577);\n\nvar cartesianAxisHelper = __webpack_require__(580);\n\nvar AxisView = __webpack_require__(579);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar modelUtil = __webpack_require__(539);\n\nvar modelHelper = __webpack_require__(559);\n\nvar findPointFromSeries = __webpack_require__(575);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\nvar AxisBuilder = __webpack_require__(578);\n\nvar AxisView = __webpack_require__(579);\n\nvar cartesianAxisHelper = __webpack_require__(580);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\n__webpack_require__(584);\n\n__webpack_require__(623);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar graphic = __webpack_require__(538);\n\nvar _layout = __webpack_require__(552);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n/* 633 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\n__webpack_require__(624);\n\n__webpack_require__(635);\n\n__webpack_require__(636);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar zrColor = __webpack_require__(558);\n\nvar eventUtil = __webpack_require__(556);\n\nvar env = __webpack_require__(543);\n\nvar formatUtil = __webpack_require__(548);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 636 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(542);\n\nvar zrUtil = __webpack_require__(537);\n\nvar env = __webpack_require__(543);\n\nvar TooltipContent = __webpack_require__(634);\n\nvar formatUtil = __webpack_require__(548);\n\nvar numberUtil = __webpack_require__(541);\n\nvar graphic = __webpack_require__(538);\n\nvar findPointFromSeries = __webpack_require__(575);\n\nvar layoutUtil = __webpack_require__(552);\n\nvar Model = __webpack_require__(547);\n\nvar globalListener = __webpack_require__(576);\n\nvar axisHelper = __webpack_require__(551);\n\nvar axisPointerViewHelper = __webpack_require__(577);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 637 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 638 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar axisDefault = __webpack_require__(637);\n\nvar ComponentModel = __webpack_require__(550);\n\nvar _layout = __webpack_require__(552);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 639 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Axis = __webpack_require__(581);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 640 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n/* 641 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Cartesian = __webpack_require__(640);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 642 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(583);\n\nvar ComponentModel = __webpack_require__(550);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 643 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(545);\n\nvar bbox = __webpack_require__(597);\n\nvar vec2 = __webpack_require__(540);\n\nvar polygonContain = __webpack_require__(678);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n/* 644 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Region = __webpack_require__(643);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 645 */\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n/* 646 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(607);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(555);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(540);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(537);\n\nvar colorTool = __webpack_require__(558);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(538);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(541);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(548);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(568);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(647);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(585);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(547);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(581);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(543);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(644);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n/* 647 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar createListFromArray = __webpack_require__(574);\n\nvar axisHelper = __webpack_require__(551);\n\nvar axisModelCommonMixin = __webpack_require__(582);\n\nvar Model = __webpack_require__(547);\n\nvar _completeDimensions = __webpack_require__(586);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(590);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n/* 648 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar _number = __webpack_require__(541);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar graphic = __webpack_require__(538);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(546);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(537);\n\nvar modelUtil = __webpack_require__(539);\n\nvar Model = __webpack_require__(547);\n\nvar ComponentModel = __webpack_require__(550);\n\nvar globalDefault = __webpack_require__(652);\n\nvar colorPaletteMinin = __webpack_require__(588);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar modelUtil = __webpack_require__(539);\n\nvar ComponentModel = __webpack_require__(550);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(560);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 654 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 655 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(560);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 656 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(560);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 657 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(553);\n\nvar graphicUtil = __webpack_require__(538);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 658 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(537);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(659);\n\nvar _model = __webpack_require__(539);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 659 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar modelUtil = __webpack_require__(539);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 660 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Scale = __webpack_require__(561);\n\nvar numberUtil = __webpack_require__(541);\n\nvar IntervalScale = __webpack_require__(566);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Scale = __webpack_require__(561);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 662 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar numberUtil = __webpack_require__(541);\n\nvar formatUtil = __webpack_require__(548);\n\nvar scaleHelper = __webpack_require__(589);\n\nvar IntervalScale = __webpack_require__(566);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Group = __webpack_require__(563);\n\nvar componentUtil = __webpack_require__(567);\n\nvar clazzUtil = __webpack_require__(549);\n\nvar modelUtil = __webpack_require__(539);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n/* 664 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(563);\n\nvar componentUtil = __webpack_require__(567);\n\nvar clazzUtil = __webpack_require__(549);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(571);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 666 */,\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(537);\n\nvar vec2 = __webpack_require__(540);\n\nvar Draggable = __webpack_require__(700);\n\nvar Eventful = __webpack_require__(557);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 668 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(537);\n\nvar _config = __webpack_require__(562);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(602);\n\nvar Pattern = __webpack_require__(601);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 669 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(562);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(537);\n\nvar log = __webpack_require__(599);\n\nvar BoundingRect = __webpack_require__(545);\n\nvar timsort = __webpack_require__(569);\n\nvar Layer = __webpack_require__(668);\n\nvar requestAnimationFrame = __webpack_require__(593);\n\nvar Image = __webpack_require__(600);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 670 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(537);\n\nvar env = __webpack_require__(543);\n\nvar Group = __webpack_require__(563);\n\nvar timsort = __webpack_require__(569);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 671 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(537);\n\nvar _event = __webpack_require__(556);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(593);\n\nvar Animator = __webpack_require__(592);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 672 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(673);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 673 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 674 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(594);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 675 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(554);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 676 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 677 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(564);\n\nvar line = __webpack_require__(676);\n\nvar cubic = __webpack_require__(675);\n\nvar quadratic = __webpack_require__(679);\n\nvar arc = __webpack_require__(674);\n\nvar _util = __webpack_require__(594);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(554);\n\nvar windingLine = __webpack_require__(595);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 678 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(595);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n/* 679 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(554);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 680 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(556);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 681 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(556);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(537);\n\nvar Eventful = __webpack_require__(557);\n\nvar env = __webpack_require__(543);\n\nvar GestureMgr = __webpack_require__(680);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 682 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 683 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Gradient = __webpack_require__(571);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 684 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(537);\n\nvar Gradient = __webpack_require__(571);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 685 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(570);\n\nvar zrUtil = __webpack_require__(537);\n\nvar textContain = __webpack_require__(553);\n\nvar textHelper = __webpack_require__(605);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 686 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(543);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 687 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(540);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 688 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(540);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 689 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(605);\n\nvar BoundingRect = __webpack_require__(545);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 690 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 691 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar vec2 = __webpack_require__(540);\n\nvar _curve = __webpack_require__(554);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 692 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 693 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 694 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar polyHelper = __webpack_require__(603);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 695 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar polyHelper = __webpack_require__(603);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 696 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar roundRectHelper = __webpack_require__(604);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 697 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 698 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar fixClipWithShadow = __webpack_require__(686);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 699 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(592);\n\nvar log = __webpack_require__(599);\n\nvar _util = __webpack_require__(537);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 700 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 701 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(544);\n\nvar PathProxy = __webpack_require__(564);\n\nvar transformPath = __webpack_require__(702);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 702 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(564);\n\nvar _vector = __webpack_require__(540);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _echarts = __webpack_require__(542);\n\nvar _echarts2 = _interopRequireDefault(_echarts);\n\nvar _index = __webpack_require__(132);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _convertDate = __webpack_require__(573);\n\nvar _convertDate2 = _interopRequireDefault(_convertDate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n__webpack_require__(617);\n\n__webpack_require__(633);\n__webpack_require__(632);\n\nexports.default = {\n    data: function data() {\n        return {\n            token: localStorage.getItem(\"token\"),\n            counts: {\n                timeList: [],\n                numList: []\n            },\n            chnl_no: '1',\n            dateRange: null,\n            chartDate: null,\n            pickerOptions: {\n                disabledDate: function disabledDate(time) {\n                    return time > Date.now();\n                },\n\n                shortcuts: [{\n                    text: '最近一周',\n                    onClick: function onClick(picker) {\n                        var end = new Date();\n                        var start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近一个月',\n                    onClick: function onClick(picker) {\n                        var end = new Date();\n                        var start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近三个月',\n                    onClick: function onClick(picker) {\n                        var end = new Date();\n                        var start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }]\n            }\n        };\n    },\n\n    computed: {\n        startTime: function startTime() {\n            if (this.dateRange && this.dateRange[0]) {\n                return (0, _convertDate2.default)(this.dateRange[0]);\n            } else {\n                var start = new Date();\n                start.setTime(start.getTime() - 3600 * 1000 * 24 * 6);\n                return (0, _convertDate2.default)(start);\n            }\n        },\n        endTime: function endTime() {\n            if (this.dateRange && this.dateRange[1]) {\n                return (0, _convertDate2.default)(this.dateRange[1]);\n            } else {\n                return (0, _convertDate2.default)(new Date());\n            }\n        }\n    },\n    methods: {\n        getCount: function getCount() {\n            var _this = this;\n\n            var chnl_no = String(this.chnl_no);\n\n            var starttime = this.startTime;\n            var endtime = this.endTime;\n            return _index2.default.getCount({\n                token: this.token,\n                gate_id: 'A',\n                chnl_no: chnl_no,\n                starttime: starttime,\n                endtime: endtime\n            }).then(function (res) {\n                _this.counts.timeList = res.data.time_list;\n                _this.counts.numList = res.data.num_list;\n            }).then(function () {\n                _this.updateChart();\n            });\n        },\n        handleClick: function handleClick(index) {\n            this.chnl_no = index;\n            console.log(index);\n            this.getCount();\n        },\n        updateChart: function updateChart() {\n            this.chartDate.setOption({\n                tooltip: {},\n                color: ['#20A0FF'],\n                xAxis: {\n                    data: this.counts.timeList\n                },\n                yAxis: {},\n                series: [{\n                    name: '进出',\n                    type: 'bar',\n                    data: this.counts.numList\n                }]\n            });\n        }\n    },\n    watch: {\n        counts: function counts(val) {\n            console.log(val);\n            this.updateChart();\n        }\n    },\n    created: function created() {\n        this.getCount();\n        console.log(this.starttime);\n    },\n    mounted: function mounted() {\n        this.chartDate = _echarts2.default.init(document.getElementById('chartDate'));\n    },\n    beforeDestroy: function beforeDestroy() {\n        this.chartDate && this.chartDate.dispose();\n    }\n};\n\n/***/ }),\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(524)();\n// imports\n\n\n// module\nexports.push([module.i, \".out-in[data-v-572af2f4]{width:100%;overflow-x:hidden}.gate[data-v-572af2f4]{width:1376px;height:428px;margin:10px auto;position:relative;zoom:.67}.gate img[data-v-572af2f4]{width:100%;height:100%}.gate .gate-nav[data-v-572af2f4]{position:absolute;width:1280px;top:131px;left:50px;display:flex;flex-direction:row-reverse}.gate .gate-nav li[data-v-572af2f4]{width:104px;margin-right:35px;cursor:pointer;border:3px solid #fff}.gate .gate-nav li .number[data-v-572af2f4]{height:54px;background-color:rgba(0,255,0,.7);line-height:56px;text-align:center;font-size:30px}.gate .gate-nav li .place[data-v-572af2f4]{height:205px;background-color:rgba(0,255,0,.7)}.gate .gate-nav li[data-v-572af2f4]:nth-child(5){margin-right:200px}.date-picker[data-v-572af2f4]{margin:10px 100px}.charts[data-v-572af2f4]{display:flex}.charts #chartDate[data-v-572af2f4]{width:950px;height:400px;overflow-x:hidden}.tip[data-v-572af2f4]{margin-left:120px;font-size:20px}.tip span[data-v-572af2f4]{color:#20a0ff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"C:/front-end/vue/sz-monitor-front/src/views/search/out-in-statistics-a.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,WAAY,AACZ,iBAAmB,CACpB,AACD,uBACE,aAAc,AACd,aAAc,AACd,iBAAkB,AAClB,kBAAmB,AACnB,QAAW,CACZ,AACD,2BACI,WAAY,AACZ,WAAa,CAChB,AACD,iCACI,kBAAmB,AACnB,aAAc,AACd,UAAW,AACX,UAAW,AACX,aAAc,AACd,0BAA4B,CAC/B,AACD,oCACM,YAAa,AACb,kBAAmB,AACnB,eAAgB,AAChB,qBAAuB,CAC5B,AACD,4CACQ,YAAa,AACb,kCAAuC,AACvC,iBAAkB,AAClB,kBAAmB,AACnB,cAAgB,CACvB,AACD,2CACQ,aAAc,AACd,iCAAuC,CAC9C,AACD,iDACQ,kBAAoB,CAC3B,AACD,8BACE,iBAAmB,CACpB,AACD,yBACE,YAAc,CACf,AACD,oCACI,YAAa,AACb,aAAc,AACd,iBAAmB,CACtB,AACD,sBACE,kBAAmB,AACnB,cAAgB,CACjB,AACD,2BACI,cAAe,AACf,eAAkB,CACrB\",\"file\":\"out-in-statistics-a.vue\",\"sourcesContent\":[\"\\n.out-in[data-v-572af2f4] {\\n  width: 100%;\\n  overflow-x: hidden;\\n}\\n.gate[data-v-572af2f4] {\\n  width: 1376px;\\n  height: 428px;\\n  margin: 10px auto;\\n  position: relative;\\n  zoom: 0.67;\\n}\\n.gate img[data-v-572af2f4] {\\n    width: 100%;\\n    height: 100%;\\n}\\n.gate .gate-nav[data-v-572af2f4] {\\n    position: absolute;\\n    width: 1280px;\\n    top: 131px;\\n    left: 50px;\\n    display: flex;\\n    flex-direction: row-reverse;\\n}\\n.gate .gate-nav li[data-v-572af2f4] {\\n      width: 104px;\\n      margin-right: 35px;\\n      cursor: pointer;\\n      border: 3px solid #fff;\\n}\\n.gate .gate-nav li .number[data-v-572af2f4] {\\n        height: 54px;\\n        background-color: rgba(0, 255, 0, 0.7);\\n        line-height: 56px;\\n        text-align: center;\\n        font-size: 30px;\\n}\\n.gate .gate-nav li .place[data-v-572af2f4] {\\n        height: 205px;\\n        background-color: rgba(0, 255, 0, 0.7);\\n}\\n.gate .gate-nav li[data-v-572af2f4]:nth-child(5) {\\n        margin-right: 200px;\\n}\\n.date-picker[data-v-572af2f4] {\\n  margin: 10px 100px;\\n}\\n.charts[data-v-572af2f4] {\\n  display: flex;\\n}\\n.charts #chartDate[data-v-572af2f4] {\\n    width: 950px;\\n    height: 400px;\\n    overflow-x: hidden;\\n}\\n.tip[data-v-572af2f4] {\\n  margin-left: 120px;\\n  font-size: 20px;\\n}\\n.tip span[data-v-572af2f4] {\\n    color: #20A0FF;\\n    font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 723 */,\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(722);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(525)(\"546ca9bf\", content, true);\n\n/***/ }),\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', {\n    staticClass: \"out-in\"\n  }, [_c('div', {\n    staticClass: \"gate\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": __webpack_require__(613),\n      \"alt\": \"\"\n    }\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"gate-nav\"\n  }, _vm._l((8), function(n) {\n    return _c('li', {\n      on: {\n        \"click\": function($event) {\n          _vm.handleClick(n)\n        }\n      }\n    }, [_c('div', {\n      staticClass: \"number\"\n    }, [_vm._v(_vm._s(n))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"place\"\n    })])\n  }))]), _vm._v(\" \"), _c('el-date-picker', {\n    staticClass: \"date-picker\",\n    attrs: {\n      \"type\": \"daterange\",\n      \"clearable\": false,\n      \"editable\": false,\n      \"placeholder\": \"选择日期范围\",\n      \"pickerOptions\": _vm.pickerOptions\n    },\n    on: {\n      \"change\": _vm.getCount\n    },\n    model: {\n      value: (_vm.dateRange),\n      callback: function($$v) {\n        _vm.dateRange = $$v\n      },\n      expression: \"dateRange\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"tip\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.chnl_no))]), _vm._v(\"通道统计数据\\n    \")]), _vm._v(\" \"), _vm._m(0)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"charts\"\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"chartDate\"\n    }\n  })])\n}]}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/1.6d79d5c56f787a5a4db2.js","\n/* styles */\nrequire(\"!!../../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-572af2f4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./out-in-statistics-a.vue\")\n\nvar Component = require(\"!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./out-in-statistics-a.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-572af2f4\\\"}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./out-in-statistics-a.vue\"),\n  /* scopeId */\n  \"data-v-572af2f4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/search/out-in-statistics-a.vue\n// module id = 531\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 537\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 538\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 539\n// module chunks = 0 1","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 540\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 541\n// module chunks = 0 1","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 542\n// module chunks = 0 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 543\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 544\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 545\n// module chunks = 0 1","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 546\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 547\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 548\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 549\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 550\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 551\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 552\n// module chunks = 0 1","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 553\n// module chunks = 0 1","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 554\n// module chunks = 0 1","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 555\n// module chunks = 0 1","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 556\n// module chunks = 0 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 557\n// module chunks = 0 1","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 558\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 559\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 560\n// module chunks = 0 1","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 561\n// module chunks = 0 1","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 562\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 563\n// module chunks = 0 1","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 564\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 565\n// module chunks = 0 1","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 566\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 567\n// module chunks = 0 1","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 568\n// module chunks = 0 1","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 569\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 570\n// module chunks = 0 1","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 571\n// module chunks = 0 1","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 572\n// module chunks = 0 1","export default function convertDate(DateObj) {\r\n    var dateString = DateObj.toLocaleDateString();\r\n    // 2017年5月25日 ipad\r\n    if (dateString.indexOf('年') > -1) {\r\n        dateString = dateString.replace('年', '-')\r\n        dateString = dateString.replace('月', '-')\r\n        dateString = dateString.replace('日', '')\r\n        return dateString\r\n    }\r\n\r\n    // 5/25/2017 Ubantu\r\n    else if (dateString.split('/')[2] && dateString.split('/')[2].length === 4) {\r\n        return [dateString.split('/')[2], dateString.split('/')[0], dateString.split('/')[1]].join(\"-\")\r\n    }\r\n\r\n    // 2017-5-17 Mac\r\n    else if (dateString.split('-')[0] && dateString.split('-')[0].length === 4) {\r\n        return dateString\r\n    }\r\n\r\n    // 2017/5/25 windows\r\n    else {\r\n        return dateString.split('/').join(\"-\")\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/convertDate.js","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 574\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 575\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 576\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 577\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 578\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 579\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 580\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 581\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 582\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 583\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 584\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 585\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 586\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 587\n// module chunks = 0 1","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 588\n// module chunks = 0 1","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 589\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 590\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 591\n// module chunks = 0 1","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 592\n// module chunks = 0 1","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 593\n// module chunks = 0 1","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 594\n// module chunks = 0 1","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 595\n// module chunks = 0 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 596\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 597\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 598\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 599\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 600\n// module chunks = 0 1","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 601\n// module chunks = 0 1","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 602\n// module chunks = 0 1","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 603\n// module chunks = 0 1","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 604\n// module chunks = 0 1","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 605\n// module chunks = 0 1","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 606\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 607\n// module chunks = 0 1","module.exports = __webpack_public_path__ + \"static/img/gate-nav-s.30bf3f3.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/imgs/gate-nav-s.jpg\n// module id = 613\n// module chunks = 1 6","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 616\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 617\n// module chunks = 0 1","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 618\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 619\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 620\n// module chunks = 0 1","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 621\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 622\n// module chunks = 0 1","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 623\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 624\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 625\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 626\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 627\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 628\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 629\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 630\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 631\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 632\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 633\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 634\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 635\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 636\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 637\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 638\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 639\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 640\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 641\n// module chunks = 0 1","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 642\n// module chunks = 0 1","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 643\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 644\n// module chunks = 0 1","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 645\n// module chunks = 0 1","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 646\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 647\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 648\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 649\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 650\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 651\n// module chunks = 0 1","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 652\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 653\n// module chunks = 0 1","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 654\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 655\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 656\n// module chunks = 0 1","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 657\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 658\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 659\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 660\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 661\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 662\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 663\n// module chunks = 0 1","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 664\n// module chunks = 0 1","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 665\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 667\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 668\n// module chunks = 0 1","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 669\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 670\n// module chunks = 0 1","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 671\n// module chunks = 0 1","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 672\n// module chunks = 0 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 673\n// module chunks = 0 1","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 674\n// module chunks = 0 1","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 675\n// module chunks = 0 1","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 676\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 677\n// module chunks = 0 1","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 678\n// module chunks = 0 1","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 679\n// module chunks = 0 1","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 680\n// module chunks = 0 1","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 681\n// module chunks = 0 1","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 682\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 683\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 684\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 685\n// module chunks = 0 1","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 686\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 687\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 688\n// module chunks = 0 1","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 689\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 690\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 691\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 692\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 693\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 694\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 695\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 696\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 697\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 698\n// module chunks = 0 1","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 699\n// module chunks = 0 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 700\n// module chunks = 0 1","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 701\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 702\n// module chunks = 0 1","<template>\r\n    <section class=\"out-in\">\r\n        <!-- gate-nav -->\r\n        <div class=\"gate\">\r\n            <img src=\"../../assets/imgs/gate-nav-s.jpg\" alt=\"\">\r\n            <ul class=\"gate-nav\">\r\n                <li v-for=\"n in 8\" @click=\"handleClick(n)\">\r\n                    <div class=\"number\">{{n}}</div>\r\n                    <div class=\"place\"></div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <el-date-picker class=\"date-picker\"\r\n                        v-model=\"dateRange\"\r\n                        type=\"daterange\"\r\n                        :clearable=\"false\"\r\n                        :editable=\"false\"\r\n                        placeholder=\"选择日期范围\"\r\n                        @change ='getCount'\r\n                        :pickerOptions=\"pickerOptions\">\r\n        </el-date-picker>\r\n        <div class=\"tip\">\r\n            <span>{{chnl_no}}</span>通道统计数据\r\n        </div>\r\n        <div class=\"charts\">\r\n            <div id=\"chartDate\"></div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import echarts from 'echarts/lib/echarts'\r\n    // 引入柱状图\r\n    require('echarts/lib/chart/bar')\r\n    // 引入提示框和标题组件\r\n    require('echarts/lib/component/tooltip')\r\n    require('echarts/lib/component/title')\r\n\r\n    import api from \"@/api/index\"\r\n    import convertDate from  \"@/utils/convertDate\"\r\n    export default {\r\n        data() {\r\n            return {\r\n                token: localStorage.getItem(\"token\"),\r\n                counts: {\r\n                    timeList: [],\r\n                    numList: []\r\n                },\r\n                chnl_no: '1',\r\n                dateRange: null,\r\n                chartDate:null,\r\n                pickerOptions: {\r\n                    disabledDate(time) {\r\n                        // 选择时间不可以超过今天 不是t+1\r\n                        return time > Date.now()\r\n                    },\r\n                    shortcuts: [{\r\n                        text: '最近一周',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }, {\r\n                        text: '最近一个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }, {\r\n                        text: '最近三个月',\r\n                        onClick(picker) {\r\n                            const end = new Date();\r\n                            const start = new Date();\r\n                            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                            picker.$emit('pick', [start, end]);\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        computed:{\r\n            startTime() {\r\n                if (this.dateRange && this.dateRange[0]) {\r\n                    return convertDate(this.dateRange[0])\r\n                }else{\r\n                    const start = new Date();\r\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 6);\r\n                    return convertDate(start)\r\n                }\r\n\r\n            },\r\n            endTime() {\r\n                if (this.dateRange && this.dateRange[1]) {\r\n                    return convertDate(this.dateRange[1])\r\n                }else{\r\n                    return convertDate(new Date())\r\n                }\r\n            },\r\n        },\r\n        methods: {\r\n            getCount() {\r\n                let chnl_no = String(this.chnl_no)\r\n                // 问题:  之前的是没问题.找不到就是因为 大小写,startTime 未定义\r\n                let starttime = this.startTime\r\n                let endtime = this.endTime\r\n                return api.getCount({\r\n                            token: this.token,\r\n                            gate_id: 'A',\r\n                            chnl_no,\r\n                            starttime,\r\n                            endtime\r\n                        }).then((res) => {\r\n                            this.counts.timeList =  res.data.time_list\r\n                            this.counts.numList =  res.data.num_list\r\n                        }).then(() =>{\r\n                            this.updateChart()\r\n                        })\r\n            },\r\n            handleClick(index) {\r\n                this.chnl_no = index\r\n                console.log(index)\r\n                this.getCount()\r\n            },\r\n            updateChart(){\r\n                this.chartDate.setOption({\r\n                    tooltip: {},\r\n                    color: ['#20A0FF'],\r\n                    xAxis: {\r\n                        data: this.counts.timeList\r\n                    },\r\n                    yAxis: {},\r\n                    series: [{\r\n                        name: '进出',\r\n                        type: 'bar',\r\n                        data: this.counts.numList\r\n                    }]\r\n                })\r\n            }\r\n        },\r\n        watch :{\r\n            counts(val){\r\n                console.log(val)\r\n                this.updateChart()\r\n            }\r\n        },\r\n        created() {\r\n            this.getCount()\r\n            console.log(this.starttime)\r\n        },\r\n        mounted() {\r\n            this.chartDate = echarts.init(document.getElementById('chartDate'))\r\n        },\r\n        beforeDestroy(){\r\n            this.chartDate && this.chartDate.dispose()\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .out-in {\r\n        width: 100%;\r\n        overflow-x: hidden;\r\n    }\r\n    .gate {\r\n        width: 1376px;\r\n        height: 428px;\r\n        margin: 10px auto;\r\n        position: relative;\r\n        zoom: 0.67;\r\n        img {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .gate-nav {\r\n            position: absolute;\r\n            width: 1280px;\r\n            top: 131px;\r\n            left: 50px;\r\n            display: flex;\r\n            flex-direction: row-reverse;\r\n            li {\r\n                width: 104px;\r\n                margin-right: 35px;\r\n                cursor: pointer;\r\n                border: 3px solid #fff;\r\n                .number {\r\n                    height: 54px;\r\n                    background-color: rgba(0, 255, 0, 0.7);\r\n                    line-height: 56px;\r\n                    text-align: center;\r\n                    font-size: 30px;\r\n                }\r\n                .place {\r\n                    height: 205px;\r\n                    background-color: rgba(0, 255, 0, 0.7);\r\n                }\r\n                &:nth-child(5) {\r\n                    margin-right: 200px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .date-picker{\r\n        margin: 10px 100px;\r\n    }\r\n    .charts {\r\n        display: flex;\r\n        #chartDate {\r\n            width: 950px;\r\n            height: 400px;\r\n            overflow-x: hidden;\r\n        }\r\n    }\r\n    .tip{\r\n        margin-left: 120px;\r\n        font-size: 20px;\r\n        span{\r\n            color: #20A0FF;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// out-in-statistics-a.vue?5caf8107","exports = module.exports = require(\"../../../node_modules/_css-loader@0.26.4@css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".out-in[data-v-572af2f4]{width:100%;overflow-x:hidden}.gate[data-v-572af2f4]{width:1376px;height:428px;margin:10px auto;position:relative;zoom:.67}.gate img[data-v-572af2f4]{width:100%;height:100%}.gate .gate-nav[data-v-572af2f4]{position:absolute;width:1280px;top:131px;left:50px;display:flex;flex-direction:row-reverse}.gate .gate-nav li[data-v-572af2f4]{width:104px;margin-right:35px;cursor:pointer;border:3px solid #fff}.gate .gate-nav li .number[data-v-572af2f4]{height:54px;background-color:rgba(0,255,0,.7);line-height:56px;text-align:center;font-size:30px}.gate .gate-nav li .place[data-v-572af2f4]{height:205px;background-color:rgba(0,255,0,.7)}.gate .gate-nav li[data-v-572af2f4]:nth-child(5){margin-right:200px}.date-picker[data-v-572af2f4]{margin:10px 100px}.charts[data-v-572af2f4]{display:flex}.charts #chartDate[data-v-572af2f4]{width:950px;height:400px;overflow-x:hidden}.tip[data-v-572af2f4]{margin-left:120px;font-size:20px}.tip span[data-v-572af2f4]{color:#20a0ff;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"C:/front-end/vue/sz-monitor-front/src/views/search/out-in-statistics-a.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,WAAY,AACZ,iBAAmB,CACpB,AACD,uBACE,aAAc,AACd,aAAc,AACd,iBAAkB,AAClB,kBAAmB,AACnB,QAAW,CACZ,AACD,2BACI,WAAY,AACZ,WAAa,CAChB,AACD,iCACI,kBAAmB,AACnB,aAAc,AACd,UAAW,AACX,UAAW,AACX,aAAc,AACd,0BAA4B,CAC/B,AACD,oCACM,YAAa,AACb,kBAAmB,AACnB,eAAgB,AAChB,qBAAuB,CAC5B,AACD,4CACQ,YAAa,AACb,kCAAuC,AACvC,iBAAkB,AAClB,kBAAmB,AACnB,cAAgB,CACvB,AACD,2CACQ,aAAc,AACd,iCAAuC,CAC9C,AACD,iDACQ,kBAAoB,CAC3B,AACD,8BACE,iBAAmB,CACpB,AACD,yBACE,YAAc,CACf,AACD,oCACI,YAAa,AACb,aAAc,AACd,iBAAmB,CACtB,AACD,sBACE,kBAAmB,AACnB,cAAgB,CACjB,AACD,2BACI,cAAe,AACf,eAAkB,CACrB\",\"file\":\"out-in-statistics-a.vue\",\"sourcesContent\":[\"\\n.out-in[data-v-572af2f4] {\\n  width: 100%;\\n  overflow-x: hidden;\\n}\\n.gate[data-v-572af2f4] {\\n  width: 1376px;\\n  height: 428px;\\n  margin: 10px auto;\\n  position: relative;\\n  zoom: 0.67;\\n}\\n.gate img[data-v-572af2f4] {\\n    width: 100%;\\n    height: 100%;\\n}\\n.gate .gate-nav[data-v-572af2f4] {\\n    position: absolute;\\n    width: 1280px;\\n    top: 131px;\\n    left: 50px;\\n    display: flex;\\n    flex-direction: row-reverse;\\n}\\n.gate .gate-nav li[data-v-572af2f4] {\\n      width: 104px;\\n      margin-right: 35px;\\n      cursor: pointer;\\n      border: 3px solid #fff;\\n}\\n.gate .gate-nav li .number[data-v-572af2f4] {\\n        height: 54px;\\n        background-color: rgba(0, 255, 0, 0.7);\\n        line-height: 56px;\\n        text-align: center;\\n        font-size: 30px;\\n}\\n.gate .gate-nav li .place[data-v-572af2f4] {\\n        height: 205px;\\n        background-color: rgba(0, 255, 0, 0.7);\\n}\\n.gate .gate-nav li[data-v-572af2f4]:nth-child(5) {\\n        margin-right: 200px;\\n}\\n.date-picker[data-v-572af2f4] {\\n  margin: 10px 100px;\\n}\\n.charts[data-v-572af2f4] {\\n  display: flex;\\n}\\n.charts #chartDate[data-v-572af2f4] {\\n    width: 950px;\\n    height: 400px;\\n    overflow-x: hidden;\\n}\\n.tip[data-v-572af2f4] {\\n  margin-left: 120px;\\n  font-size: 20px;\\n}\\n.tip span[data-v-572af2f4] {\\n    color: #20A0FF;\\n    font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.26.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-572af2f4\",\"scoped\":true,\"hasInlineConfig\":false}!./~/_sass-loader@6.0.6@sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/search/out-in-statistics-a.vue\n// module id = 722\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@0.26.4@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-572af2f4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_sass-loader@6.0.6@sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./out-in-statistics-a.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"546ca9bf\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@2.0.5@vue-style-loader!./~/_css-loader@0.26.4@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-572af2f4\",\"scoped\":true,\"hasInlineConfig\":false}!./~/_sass-loader@6.0.6@sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/search/out-in-statistics-a.vue\n// module id = 733\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', {\n    staticClass: \"out-in\"\n  }, [_c('div', {\n    staticClass: \"gate\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": require(\"../../assets/imgs/gate-nav-s.jpg\"),\n      \"alt\": \"\"\n    }\n  }), _vm._v(\" \"), _c('ul', {\n    staticClass: \"gate-nav\"\n  }, _vm._l((8), function(n) {\n    return _c('li', {\n      on: {\n        \"click\": function($event) {\n          _vm.handleClick(n)\n        }\n      }\n    }, [_c('div', {\n      staticClass: \"number\"\n    }, [_vm._v(_vm._s(n))]), _vm._v(\" \"), _c('div', {\n      staticClass: \"place\"\n    })])\n  }))]), _vm._v(\" \"), _c('el-date-picker', {\n    staticClass: \"date-picker\",\n    attrs: {\n      \"type\": \"daterange\",\n      \"clearable\": false,\n      \"editable\": false,\n      \"placeholder\": \"选择日期范围\",\n      \"pickerOptions\": _vm.pickerOptions\n    },\n    on: {\n      \"change\": _vm.getCount\n    },\n    model: {\n      value: (_vm.dateRange),\n      callback: function($$v) {\n        _vm.dateRange = $$v\n      },\n      expression: \"dateRange\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"tip\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.chnl_no))]), _vm._v(\"通道统计数据\\n    \")]), _vm._v(\" \"), _vm._m(0)], 1)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"charts\"\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"chartDate\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-572af2f4\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/search/out-in-statistics-a.vue\n// module id = 744\n// module chunks = 1"],"sourceRoot":""}